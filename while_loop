***Write a function, sublist, that takes in a list of numbers as the parameter. 
In the function, use a while loop to return a sublist of the input list. 
The sublist should contain the same values of the original list up until it reaches the number 5 (it should not contain the number 5).***

"""code"""
def sublist(lst):
    idx=0
    sublist=[]
    while idx<len(lst):
        if lst[idx] == 5 :
            break
        sublist.append(lst[idx])
        idx=idx+1
    return sublist

print(sublist([1,2,3,4]))

***Write a function, test, that takes in three parameters: a required integer, an optional boolean whose default value is True, and an optional dictionary, called dict1, 
whose default value is {2:3, 4:5, 6:8}. If the boolean parameter is True, the function should test to see if the integer is a key in the dictionary. The value of that key should then be returned. If the boolean parameter is False, return the boolean value “False”.***
            
"""code"""
def test(x,y=True,dict1={2:3, 4:5, 6:8}):
    if y is True:
        for i in dict1.keys():
            if i== x:
                return dict1[i]
    else:
        return y
***Write a function called checkingIfIn that takes three parameters. The first is a required parameter, which should be a string. The second is an optional parameter called direction with a default value of True. The third is an optional parameter called d that has a default value of {'apple': 2, 'pear': 1, 'fruit': 19, 'orange': 5, 'banana': 3, 'grapes': 2, 'watermelon': 7}. Write the function checkingIfIn so that when the second parameter is True, it checks to see if the first parameter is a key in the third parameter; if it is, return True, otherwise return False.

But if the second paramter is False, then the function should check to see if the first parameter is not a key of the third. If it’s not, the function should return True in this case, and if it is, it should return False.***

"""code""
def checkingIfIn(a, direction = True, d = {'apple': 2, 'pear': 1, 'fruit': 19, 'orange': 5, 'banana': 3, 'grapes': 2, 'watermelon': 7}):
    if direction == True:
        if a in d.keys():
            return True
        else:
            return False
    else:
        if a not in d.keys():
            return True
        else:
            return False

